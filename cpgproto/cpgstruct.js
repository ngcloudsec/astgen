// source: cpg.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.cpg.CpgStruct');
goog.provide('proto.cpg.CpgStruct.Edge');
goog.provide('proto.cpg.CpgStruct.Edge.EdgeType');
goog.provide('proto.cpg.CpgStruct.Edge.Property');
goog.provide('proto.cpg.CpgStruct.Node');
goog.provide('proto.cpg.CpgStruct.Node.NodeType');
goog.provide('proto.cpg.CpgStruct.Node.Property');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.cpg.PropertyValue');

goog.forwardDeclare('proto.cpg.EdgePropertyName');
goog.forwardDeclare('proto.cpg.NodePropertyName');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cpg.CpgStruct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cpg.CpgStruct.repeatedFields_, null);
};
goog.inherits(proto.cpg.CpgStruct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cpg.CpgStruct.displayName = 'proto.cpg.CpgStruct';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cpg.CpgStruct.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cpg.CpgStruct.Node.repeatedFields_, null);
};
goog.inherits(proto.cpg.CpgStruct.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cpg.CpgStruct.Node.displayName = 'proto.cpg.CpgStruct.Node';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cpg.CpgStruct.Node.Property = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cpg.CpgStruct.Node.Property, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cpg.CpgStruct.Node.Property.displayName = 'proto.cpg.CpgStruct.Node.Property';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cpg.CpgStruct.Edge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cpg.CpgStruct.Edge.repeatedFields_, null);
};
goog.inherits(proto.cpg.CpgStruct.Edge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cpg.CpgStruct.Edge.displayName = 'proto.cpg.CpgStruct.Edge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cpg.CpgStruct.Edge.Property = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cpg.CpgStruct.Edge.Property, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cpg.CpgStruct.Edge.Property.displayName = 'proto.cpg.CpgStruct.Edge.Property';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cpg.CpgStruct.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cpg.CpgStruct.prototype.toObject = function(opt_includeInstance) {
  return proto.cpg.CpgStruct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cpg.CpgStruct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.CpgStruct.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeList: jspb.Message.toObjectList(msg.getNodeList(),
    proto.cpg.CpgStruct.Node.toObject, includeInstance),
    edgeList: jspb.Message.toObjectList(msg.getEdgeList(),
    proto.cpg.CpgStruct.Edge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cpg.CpgStruct}
 */
proto.cpg.CpgStruct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cpg.CpgStruct;
  return proto.cpg.CpgStruct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cpg.CpgStruct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cpg.CpgStruct}
 */
proto.cpg.CpgStruct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cpg.CpgStruct.Node;
      reader.readMessage(value,proto.cpg.CpgStruct.Node.deserializeBinaryFromReader);
      msg.addNode(value);
      break;
    case 2:
      var value = new proto.cpg.CpgStruct.Edge;
      reader.readMessage(value,proto.cpg.CpgStruct.Edge.deserializeBinaryFromReader);
      msg.addEdge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cpg.CpgStruct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cpg.CpgStruct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cpg.CpgStruct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.CpgStruct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cpg.CpgStruct.Node.serializeBinaryToWriter
    );
  }
  f = message.getEdgeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cpg.CpgStruct.Edge.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cpg.CpgStruct.Node.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cpg.CpgStruct.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.cpg.CpgStruct.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cpg.CpgStruct.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.CpgStruct.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    propertyList: jspb.Message.toObjectList(msg.getPropertyList(),
    proto.cpg.CpgStruct.Node.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cpg.CpgStruct.Node}
 */
proto.cpg.CpgStruct.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cpg.CpgStruct.Node;
  return proto.cpg.CpgStruct.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cpg.CpgStruct.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cpg.CpgStruct.Node}
 */
proto.cpg.CpgStruct.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.cpg.CpgStruct.Node.NodeType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.cpg.CpgStruct.Node.Property;
      reader.readMessage(value,proto.cpg.CpgStruct.Node.Property.deserializeBinaryFromReader);
      msg.addProperty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cpg.CpgStruct.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cpg.CpgStruct.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cpg.CpgStruct.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.CpgStruct.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPropertyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cpg.CpgStruct.Node.Property.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cpg.CpgStruct.Node.NodeType = {
  UNKNOWN_NODE_TYPE: 0,
  METHOD: 1,
  METHOD_RETURN: 3,
  ANNOTATION: 5,
  ANNOTATION_PARAMETER_ASSIGN: 6,
  ANNOTATION_PARAMETER: 7,
  LITERAL: 8,
  MEMBER: 9,
  ARRAY_INITIALIZER: 14,
  CALL: 15,
  LOCAL: 23,
  TAG: 24,
  LOCATION: 25,
  IDENTIFIER: 27,
  RETURN: 30,
  BLOCK: 31,
  METHOD_INST: 32,
  METHOD_PARAMETER_OUT: 33,
  METHOD_PARAMETER_IN: 34,
  DEPENDENCY: 35,
  PACKAGE_PREFIX: 36,
  FILE: 38,
  META_DATA: 39,
  NAMESPACE: 40,
  NAMESPACE_BLOCK: 41,
  FRAMEWORK: 42,
  FRAMEWORK_DATA: 43,
  UNKNOWN: 44,
  TYPE: 45,
  TYPE_DECL: 46,
  TYPE_PARAMETER: 47,
  TYPE_ARGUMENT: 48,
  ANNOTATION_LITERAL: 49,
  CONFIG_FILE: 50,
  MATCH_INFO: 51,
  SENSITIVE_DATA_TYPE: 52,
  SENSITIVE_MEMBER: 53,
  SENSITIVE_VARIABLE: 54,
  SENSITIVE_REFERENCE: 55,
  BINDING: 146,
  METHOD_SUMMARY: 199,
  SP_ANNOTATION_PARAMETER: 200,
  CALL_SITE: 201,
  SOURCE: 202,
  SINK: 203,
  CALL_CHAIN: 204,
  PROGRAM_POINT: 205,
  VARIABLE_INFO: 206,
  FLOW: 207,
  TAG_NODE_PAIR: 208,
  READ: 209,
  WRITE: 210,
  TRANSFORM: 211,
  IOFLOW: 212,
  TRANSFORMATION: 213,
  FINDING: 214,
  ROUTE: 215,
  SP_BLACKLIST: 216,
  KEY_VALUE_PAIR: 217,
  MODIFIER: 300,
  TAGS: 301,
  IMPLICIT_CALL: 307,
  METHOD_REF: 333,
  CLOSURE_BINDING: 334,
  TYPE_REF: 335,
  CONTROL_STRUCTURE: 339,
  JUMP_TARGET: 340,
  JUMP_LABEL: 341,
  COMMENT: 511,
  DOM_NODE: 600,
  DOM_ATTRIBUTE: 601,
  POST_EXECUTION_CALL: 3071,
  FIELD_IDENTIFIER: 2001081
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cpg.CpgStruct.Node.Property.prototype.toObject = function(opt_includeInstance) {
  return proto.cpg.CpgStruct.Node.Property.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cpg.CpgStruct.Node.Property} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.CpgStruct.Node.Property.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: (f = msg.getValue()) && proto.cpg.PropertyValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cpg.CpgStruct.Node.Property}
 */
proto.cpg.CpgStruct.Node.Property.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cpg.CpgStruct.Node.Property;
  return proto.cpg.CpgStruct.Node.Property.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cpg.CpgStruct.Node.Property} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cpg.CpgStruct.Node.Property}
 */
proto.cpg.CpgStruct.Node.Property.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cpg.NodePropertyName} */ (reader.readEnum());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.cpg.PropertyValue;
      reader.readMessage(value,proto.cpg.PropertyValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cpg.CpgStruct.Node.Property.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cpg.CpgStruct.Node.Property.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cpg.CpgStruct.Node.Property} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.CpgStruct.Node.Property.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cpg.PropertyValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodePropertyName name = 1;
 * @return {!proto.cpg.NodePropertyName}
 */
proto.cpg.CpgStruct.Node.Property.prototype.getName = function() {
  return /** @type {!proto.cpg.NodePropertyName} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cpg.NodePropertyName} value
 * @return {!proto.cpg.CpgStruct.Node.Property} returns this
 */
proto.cpg.CpgStruct.Node.Property.prototype.setName = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional PropertyValue value = 2;
 * @return {?proto.cpg.PropertyValue}
 */
proto.cpg.CpgStruct.Node.Property.prototype.getValue = function() {
  return /** @type{?proto.cpg.PropertyValue} */ (
    jspb.Message.getWrapperField(this, proto.cpg.PropertyValue, 2));
};


/**
 * @param {?proto.cpg.PropertyValue|undefined} value
 * @return {!proto.cpg.CpgStruct.Node.Property} returns this
*/
proto.cpg.CpgStruct.Node.Property.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cpg.CpgStruct.Node.Property} returns this
 */
proto.cpg.CpgStruct.Node.Property.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.CpgStruct.Node.Property.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 key = 1;
 * @return {number}
 */
proto.cpg.CpgStruct.Node.prototype.getKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cpg.CpgStruct.Node} returns this
 */
proto.cpg.CpgStruct.Node.prototype.setKey = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional NodeType type = 2;
 * @return {!proto.cpg.CpgStruct.Node.NodeType}
 */
proto.cpg.CpgStruct.Node.prototype.getType = function() {
  return /** @type {!proto.cpg.CpgStruct.Node.NodeType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cpg.CpgStruct.Node.NodeType} value
 * @return {!proto.cpg.CpgStruct.Node} returns this
 */
proto.cpg.CpgStruct.Node.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated Property property = 3;
 * @return {!Array<!proto.cpg.CpgStruct.Node.Property>}
 */
proto.cpg.CpgStruct.Node.prototype.getPropertyList = function() {
  return /** @type{!Array<!proto.cpg.CpgStruct.Node.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cpg.CpgStruct.Node.Property, 3));
};


/**
 * @param {!Array<!proto.cpg.CpgStruct.Node.Property>} value
 * @return {!proto.cpg.CpgStruct.Node} returns this
*/
proto.cpg.CpgStruct.Node.prototype.setPropertyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cpg.CpgStruct.Node.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cpg.CpgStruct.Node.Property}
 */
proto.cpg.CpgStruct.Node.prototype.addProperty = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cpg.CpgStruct.Node.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cpg.CpgStruct.Node} returns this
 */
proto.cpg.CpgStruct.Node.prototype.clearPropertyList = function() {
  return this.setPropertyList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cpg.CpgStruct.Edge.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cpg.CpgStruct.Edge.prototype.toObject = function(opt_includeInstance) {
  return proto.cpg.CpgStruct.Edge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cpg.CpgStruct.Edge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.CpgStruct.Edge.toObject = function(includeInstance, msg) {
  var f, obj = {
    src: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dst: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    propertyList: jspb.Message.toObjectList(msg.getPropertyList(),
    proto.cpg.CpgStruct.Edge.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cpg.CpgStruct.Edge}
 */
proto.cpg.CpgStruct.Edge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cpg.CpgStruct.Edge;
  return proto.cpg.CpgStruct.Edge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cpg.CpgStruct.Edge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cpg.CpgStruct.Edge}
 */
proto.cpg.CpgStruct.Edge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSrc(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDst(value);
      break;
    case 3:
      var value = /** @type {!proto.cpg.CpgStruct.Edge.EdgeType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new proto.cpg.CpgStruct.Edge.Property;
      reader.readMessage(value,proto.cpg.CpgStruct.Edge.Property.deserializeBinaryFromReader);
      msg.addProperty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cpg.CpgStruct.Edge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cpg.CpgStruct.Edge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cpg.CpgStruct.Edge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.CpgStruct.Edge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrc();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDst();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPropertyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cpg.CpgStruct.Edge.Property.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cpg.CpgStruct.Edge.EdgeType = {
  UNKNOWN_EDGE_TYPE: 0,
  AST: 3,
  CALL: 6,
  CONTAINS_NODE: 9,
  REF: 10,
  TAGGED_BY: 11,
  PARAMETER_LINK: 12,
  TAINT_REMOVE: 17,
  ATTACHED_DATA: 18,
  CFG: 19,
  DYNAMIC_TYPE: 20,
  EVAL_TYPE: 21,
  BINDS_TO: 22,
  INHERITS_FROM: 23,
  CONTAINS: 28,
  VTABLE: 30,
  CAPTURE: 40,
  CAPTURED_BY: 41,
  RECEIVER: 55,
  CONDITION: 56,
  REACHING_DEF: 137,
  ALIAS_OF: 138,
  TYPE_DECL_ALIAS: 139,
  BINDS: 155,
  ARGUMENT: 156,
  SOURCE_FILE: 157,
  DOMINATE: 181,
  POST_DOMINATE: 182,
  CDG: 183,
  IS_SENSITIVE_DATA_DESCR_OF: 900,
  IS_SENSITIVE_DATA_DESCR_OF_REF: 901,
  IS_SENSITIVE_DATA_OF_TYPE: 902
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cpg.CpgStruct.Edge.Property.prototype.toObject = function(opt_includeInstance) {
  return proto.cpg.CpgStruct.Edge.Property.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cpg.CpgStruct.Edge.Property} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.CpgStruct.Edge.Property.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: (f = msg.getValue()) && proto.cpg.PropertyValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cpg.CpgStruct.Edge.Property}
 */
proto.cpg.CpgStruct.Edge.Property.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cpg.CpgStruct.Edge.Property;
  return proto.cpg.CpgStruct.Edge.Property.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cpg.CpgStruct.Edge.Property} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cpg.CpgStruct.Edge.Property}
 */
proto.cpg.CpgStruct.Edge.Property.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cpg.EdgePropertyName} */ (reader.readEnum());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.cpg.PropertyValue;
      reader.readMessage(value,proto.cpg.PropertyValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cpg.CpgStruct.Edge.Property.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cpg.CpgStruct.Edge.Property.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cpg.CpgStruct.Edge.Property} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.CpgStruct.Edge.Property.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cpg.PropertyValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional EdgePropertyName name = 1;
 * @return {!proto.cpg.EdgePropertyName}
 */
proto.cpg.CpgStruct.Edge.Property.prototype.getName = function() {
  return /** @type {!proto.cpg.EdgePropertyName} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cpg.EdgePropertyName} value
 * @return {!proto.cpg.CpgStruct.Edge.Property} returns this
 */
proto.cpg.CpgStruct.Edge.Property.prototype.setName = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional PropertyValue value = 2;
 * @return {?proto.cpg.PropertyValue}
 */
proto.cpg.CpgStruct.Edge.Property.prototype.getValue = function() {
  return /** @type{?proto.cpg.PropertyValue} */ (
    jspb.Message.getWrapperField(this, proto.cpg.PropertyValue, 2));
};


/**
 * @param {?proto.cpg.PropertyValue|undefined} value
 * @return {!proto.cpg.CpgStruct.Edge.Property} returns this
*/
proto.cpg.CpgStruct.Edge.Property.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cpg.CpgStruct.Edge.Property} returns this
 */
proto.cpg.CpgStruct.Edge.Property.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.CpgStruct.Edge.Property.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 src = 1;
 * @return {number}
 */
proto.cpg.CpgStruct.Edge.prototype.getSrc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cpg.CpgStruct.Edge} returns this
 */
proto.cpg.CpgStruct.Edge.prototype.setSrc = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 dst = 2;
 * @return {number}
 */
proto.cpg.CpgStruct.Edge.prototype.getDst = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cpg.CpgStruct.Edge} returns this
 */
proto.cpg.CpgStruct.Edge.prototype.setDst = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional EdgeType type = 3;
 * @return {!proto.cpg.CpgStruct.Edge.EdgeType}
 */
proto.cpg.CpgStruct.Edge.prototype.getType = function() {
  return /** @type {!proto.cpg.CpgStruct.Edge.EdgeType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cpg.CpgStruct.Edge.EdgeType} value
 * @return {!proto.cpg.CpgStruct.Edge} returns this
 */
proto.cpg.CpgStruct.Edge.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated Property property = 4;
 * @return {!Array<!proto.cpg.CpgStruct.Edge.Property>}
 */
proto.cpg.CpgStruct.Edge.prototype.getPropertyList = function() {
  return /** @type{!Array<!proto.cpg.CpgStruct.Edge.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cpg.CpgStruct.Edge.Property, 4));
};


/**
 * @param {!Array<!proto.cpg.CpgStruct.Edge.Property>} value
 * @return {!proto.cpg.CpgStruct.Edge} returns this
*/
proto.cpg.CpgStruct.Edge.prototype.setPropertyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cpg.CpgStruct.Edge.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cpg.CpgStruct.Edge.Property}
 */
proto.cpg.CpgStruct.Edge.prototype.addProperty = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cpg.CpgStruct.Edge.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cpg.CpgStruct.Edge} returns this
 */
proto.cpg.CpgStruct.Edge.prototype.clearPropertyList = function() {
  return this.setPropertyList([]);
};


/**
 * repeated Node node = 1;
 * @return {!Array<!proto.cpg.CpgStruct.Node>}
 */
proto.cpg.CpgStruct.prototype.getNodeList = function() {
  return /** @type{!Array<!proto.cpg.CpgStruct.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cpg.CpgStruct.Node, 1));
};


/**
 * @param {!Array<!proto.cpg.CpgStruct.Node>} value
 * @return {!proto.cpg.CpgStruct} returns this
*/
proto.cpg.CpgStruct.prototype.setNodeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cpg.CpgStruct.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cpg.CpgStruct.Node}
 */
proto.cpg.CpgStruct.prototype.addNode = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cpg.CpgStruct.Node, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cpg.CpgStruct} returns this
 */
proto.cpg.CpgStruct.prototype.clearNodeList = function() {
  return this.setNodeList([]);
};


/**
 * repeated Edge edge = 2;
 * @return {!Array<!proto.cpg.CpgStruct.Edge>}
 */
proto.cpg.CpgStruct.prototype.getEdgeList = function() {
  return /** @type{!Array<!proto.cpg.CpgStruct.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cpg.CpgStruct.Edge, 2));
};


/**
 * @param {!Array<!proto.cpg.CpgStruct.Edge>} value
 * @return {!proto.cpg.CpgStruct} returns this
*/
proto.cpg.CpgStruct.prototype.setEdgeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cpg.CpgStruct.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cpg.CpgStruct.Edge}
 */
proto.cpg.CpgStruct.prototype.addEdge = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cpg.CpgStruct.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cpg.CpgStruct} returns this
 */
proto.cpg.CpgStruct.prototype.clearEdgeList = function() {
  return this.setEdgeList([]);
};


