// source: cpg.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.cpg.PropertyValue');
goog.provide('proto.cpg.PropertyValue.ValueCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.cpg.BoolList');
goog.require('proto.cpg.ContainedRefs');
goog.require('proto.cpg.DoubleList');
goog.require('proto.cpg.FloatList');
goog.require('proto.cpg.IntList');
goog.require('proto.cpg.LongList');
goog.require('proto.cpg.StringList');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cpg.PropertyValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cpg.PropertyValue.oneofGroups_);
};
goog.inherits(proto.cpg.PropertyValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cpg.PropertyValue.displayName = 'proto.cpg.PropertyValue';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cpg.PropertyValue.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13]];

/**
 * @enum {number}
 */
proto.cpg.PropertyValue.ValueCase = {
  VALUE_NOT_SET: 0,
  STRING_VALUE: 1,
  BOOL_VALUE: 2,
  INT_VALUE: 3,
  LONG_VALUE: 4,
  FLOAT_VALUE: 5,
  DOUBLE_VALUE: 6,
  STRING_LIST: 7,
  BOOL_LIST: 8,
  INT_LIST: 9,
  LONG_LIST: 10,
  FLOAT_LIST: 11,
  DOUBLE_LIST: 12,
  CONTAINED_REFS: 13
};

/**
 * @return {proto.cpg.PropertyValue.ValueCase}
 */
proto.cpg.PropertyValue.prototype.getValueCase = function() {
  return /** @type {proto.cpg.PropertyValue.ValueCase} */(jspb.Message.computeOneofCase(this, proto.cpg.PropertyValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cpg.PropertyValue.prototype.toObject = function(opt_includeInstance) {
  return proto.cpg.PropertyValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cpg.PropertyValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.PropertyValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    stringValue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    boolValue: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    intValue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    longValue: jspb.Message.getFieldWithDefault(msg, 4, 0),
    floatValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    doubleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    stringList: (f = msg.getStringList()) && proto.cpg.StringList.toObject(includeInstance, f),
    boolList: (f = msg.getBoolList()) && proto.cpg.BoolList.toObject(includeInstance, f),
    intList: (f = msg.getIntList()) && proto.cpg.IntList.toObject(includeInstance, f),
    longList: (f = msg.getLongList()) && proto.cpg.LongList.toObject(includeInstance, f),
    floatList: (f = msg.getFloatList()) && proto.cpg.FloatList.toObject(includeInstance, f),
    doubleList: (f = msg.getDoubleList()) && proto.cpg.DoubleList.toObject(includeInstance, f),
    containedRefs: (f = msg.getContainedRefs()) && proto.cpg.ContainedRefs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cpg.PropertyValue}
 */
proto.cpg.PropertyValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cpg.PropertyValue;
  return proto.cpg.PropertyValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cpg.PropertyValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cpg.PropertyValue}
 */
proto.cpg.PropertyValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLongValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloatValue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    case 7:
      var value = new proto.cpg.StringList;
      reader.readMessage(value,proto.cpg.StringList.deserializeBinaryFromReader);
      msg.setStringList(value);
      break;
    case 8:
      var value = new proto.cpg.BoolList;
      reader.readMessage(value,proto.cpg.BoolList.deserializeBinaryFromReader);
      msg.setBoolList(value);
      break;
    case 9:
      var value = new proto.cpg.IntList;
      reader.readMessage(value,proto.cpg.IntList.deserializeBinaryFromReader);
      msg.setIntList(value);
      break;
    case 10:
      var value = new proto.cpg.LongList;
      reader.readMessage(value,proto.cpg.LongList.deserializeBinaryFromReader);
      msg.setLongList(value);
      break;
    case 11:
      var value = new proto.cpg.FloatList;
      reader.readMessage(value,proto.cpg.FloatList.deserializeBinaryFromReader);
      msg.setFloatList(value);
      break;
    case 12:
      var value = new proto.cpg.DoubleList;
      reader.readMessage(value,proto.cpg.DoubleList.deserializeBinaryFromReader);
      msg.setDoubleList(value);
      break;
    case 13:
      var value = new proto.cpg.ContainedRefs;
      reader.readMessage(value,proto.cpg.ContainedRefs.deserializeBinaryFromReader);
      msg.setContainedRefs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cpg.PropertyValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cpg.PropertyValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cpg.PropertyValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cpg.PropertyValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getStringList();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cpg.StringList.serializeBinaryToWriter
    );
  }
  f = message.getBoolList();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.cpg.BoolList.serializeBinaryToWriter
    );
  }
  f = message.getIntList();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.cpg.IntList.serializeBinaryToWriter
    );
  }
  f = message.getLongList();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cpg.LongList.serializeBinaryToWriter
    );
  }
  f = message.getFloatList();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.cpg.FloatList.serializeBinaryToWriter
    );
  }
  f = message.getDoubleList();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.cpg.DoubleList.serializeBinaryToWriter
    );
  }
  f = message.getContainedRefs();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.cpg.ContainedRefs.serializeBinaryToWriter
    );
  }
};


/**
 * optional string string_value = 1;
 * @return {string}
 */
proto.cpg.PropertyValue.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 1, proto.cpg.PropertyValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool bool_value = 2;
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.getBoolValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearBoolValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.cpg.PropertyValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 int_value = 3;
 * @return {number}
 */
proto.cpg.PropertyValue.prototype.getIntValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.setIntValue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearIntValue = function() {
  return jspb.Message.setOneofField(this, 3, proto.cpg.PropertyValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasIntValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 long_value = 4;
 * @return {number}
 */
proto.cpg.PropertyValue.prototype.getLongValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.setLongValue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearLongValue = function() {
  return jspb.Message.setOneofField(this, 4, proto.cpg.PropertyValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasLongValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float float_value = 5;
 * @return {number}
 */
proto.cpg.PropertyValue.prototype.getFloatValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.setFloatValue = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearFloatValue = function() {
  return jspb.Message.setOneofField(this, 5, proto.cpg.PropertyValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasFloatValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double double_value = 6;
 * @return {number}
 */
proto.cpg.PropertyValue.prototype.getDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearDoubleValue = function() {
  return jspb.Message.setOneofField(this, 6, proto.cpg.PropertyValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional StringList string_list = 7;
 * @return {?proto.cpg.StringList}
 */
proto.cpg.PropertyValue.prototype.getStringList = function() {
  return /** @type{?proto.cpg.StringList} */ (
    jspb.Message.getWrapperField(this, proto.cpg.StringList, 7));
};


/**
 * @param {?proto.cpg.StringList|undefined} value
 * @return {!proto.cpg.PropertyValue} returns this
*/
proto.cpg.PropertyValue.prototype.setStringList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearStringList = function() {
  return this.setStringList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasStringList = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional BoolList bool_list = 8;
 * @return {?proto.cpg.BoolList}
 */
proto.cpg.PropertyValue.prototype.getBoolList = function() {
  return /** @type{?proto.cpg.BoolList} */ (
    jspb.Message.getWrapperField(this, proto.cpg.BoolList, 8));
};


/**
 * @param {?proto.cpg.BoolList|undefined} value
 * @return {!proto.cpg.PropertyValue} returns this
*/
proto.cpg.PropertyValue.prototype.setBoolList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearBoolList = function() {
  return this.setBoolList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasBoolList = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional IntList int_list = 9;
 * @return {?proto.cpg.IntList}
 */
proto.cpg.PropertyValue.prototype.getIntList = function() {
  return /** @type{?proto.cpg.IntList} */ (
    jspb.Message.getWrapperField(this, proto.cpg.IntList, 9));
};


/**
 * @param {?proto.cpg.IntList|undefined} value
 * @return {!proto.cpg.PropertyValue} returns this
*/
proto.cpg.PropertyValue.prototype.setIntList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearIntList = function() {
  return this.setIntList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasIntList = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional LongList long_list = 10;
 * @return {?proto.cpg.LongList}
 */
proto.cpg.PropertyValue.prototype.getLongList = function() {
  return /** @type{?proto.cpg.LongList} */ (
    jspb.Message.getWrapperField(this, proto.cpg.LongList, 10));
};


/**
 * @param {?proto.cpg.LongList|undefined} value
 * @return {!proto.cpg.PropertyValue} returns this
*/
proto.cpg.PropertyValue.prototype.setLongList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearLongList = function() {
  return this.setLongList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasLongList = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional FloatList float_list = 11;
 * @return {?proto.cpg.FloatList}
 */
proto.cpg.PropertyValue.prototype.getFloatList = function() {
  return /** @type{?proto.cpg.FloatList} */ (
    jspb.Message.getWrapperField(this, proto.cpg.FloatList, 11));
};


/**
 * @param {?proto.cpg.FloatList|undefined} value
 * @return {!proto.cpg.PropertyValue} returns this
*/
proto.cpg.PropertyValue.prototype.setFloatList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearFloatList = function() {
  return this.setFloatList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasFloatList = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional DoubleList double_list = 12;
 * @return {?proto.cpg.DoubleList}
 */
proto.cpg.PropertyValue.prototype.getDoubleList = function() {
  return /** @type{?proto.cpg.DoubleList} */ (
    jspb.Message.getWrapperField(this, proto.cpg.DoubleList, 12));
};


/**
 * @param {?proto.cpg.DoubleList|undefined} value
 * @return {!proto.cpg.PropertyValue} returns this
*/
proto.cpg.PropertyValue.prototype.setDoubleList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearDoubleList = function() {
  return this.setDoubleList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasDoubleList = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ContainedRefs contained_refs = 13;
 * @return {?proto.cpg.ContainedRefs}
 */
proto.cpg.PropertyValue.prototype.getContainedRefs = function() {
  return /** @type{?proto.cpg.ContainedRefs} */ (
    jspb.Message.getWrapperField(this, proto.cpg.ContainedRefs, 13));
};


/**
 * @param {?proto.cpg.ContainedRefs|undefined} value
 * @return {!proto.cpg.PropertyValue} returns this
*/
proto.cpg.PropertyValue.prototype.setContainedRefs = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.cpg.PropertyValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cpg.PropertyValue} returns this
 */
proto.cpg.PropertyValue.prototype.clearContainedRefs = function() {
  return this.setContainedRefs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cpg.PropertyValue.prototype.hasContainedRefs = function() {
  return jspb.Message.getField(this, 13) != null;
};


